//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMAC.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SmacEntities : DbContext
    {
        public SmacEntities()
            : base("name=SmacEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<ClubEnrollment> ClubEnrollments { get; set; }
        public virtual DbSet<Club> Clubs { get; set; }
        public virtual DbSet<ClubSchedule> ClubSchedules { get; set; }
        public virtual DbSet<Day> Days { get; set; }
        public virtual DbSet<Enrollment> Enrollments { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<Grade> Grades { get; set; }
        public virtual DbSet<KhanShare> KhanShares { get; set; }
        public virtual DbSet<LatestNews> LatestNewsSet { get; set; }
        public virtual DbSet<MarkingPeriod> MarkingPeriods { get; set; }
        public virtual DbSet<PrivateMessage> PrivateMessages { get; set; }
        public virtual DbSet<School> Schools { get; set; }
        public virtual DbSet<SchoolYear> SchoolYears { get; set; }
        public virtual DbSet<Section> Sections { get; set; }
        public virtual DbSet<SectionSchedule> SectionSchedules { get; set; }
        public virtual DbSet<Staff> Staffs { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }
        public virtual DbSet<TeacherSchedule> TeacherSchedules { get; set; }
        public virtual DbSet<Thread> Threads { get; set; }
        public virtual DbSet<TimeSlot> TimeSlots { get; set; }
        public virtual DbSet<UserCredential> UserCredentials { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<usp_GetLatestPrivateMessages_Result> usp_GetLatestPrivateMessages(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetLatestPrivateMessages_Result>("usp_GetLatestPrivateMessages", userIDParameter);
        }
    
        public virtual ObjectResult<usp_GetUsersInSchool_Result> usp_GetUsersInSchool(Nullable<int> schoolId, string userId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUsersInSchool_Result>("usp_GetUsersInSchool", schoolIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSectionThreads_Result> usp_GetSectionThreads(Nullable<int> sectionId)
        {
            var sectionIdParameter = sectionId.HasValue ?
                new ObjectParameter("sectionId", sectionId) :
                new ObjectParameter("sectionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSectionThreads_Result>("usp_GetSectionThreads", sectionIdParameter);
        }
    
        public virtual ObjectResult<usp_GetClubSchedule_Result> usp_GetClubSchedule(Nullable<int> clubId)
        {
            var clubIdParameter = clubId.HasValue ?
                new ObjectParameter("clubId", clubId) :
                new ObjectParameter("clubId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetClubSchedule_Result>("usp_GetClubSchedule", clubIdParameter);
        }
    }
}
